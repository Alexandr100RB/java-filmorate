DROP TABLE IF EXISTS feeds CASCADE;
DROP TABLE IF EXISTS review_reactions CASCADE;
DROP TABLE IF EXISTS reviews CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS friendship CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS film_directors CASCADE;
DROP TABLE IF EXISTS directors CASCADE;
DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS mpa_rating CASCADE;
DROP TABLE IF EXISTS event_types CASCADE;
DROP TABLE IF EXISTS operations_types CASCADE;

CREATE TABLE IF NOT EXISTS mpa_rating (
  rating_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(10) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS genres (
  genre_id INT PRIMARY KEY,
  name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS directors (
  director_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
  film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(200) NOT NULL,
  release_date DATE NOT NULL,
  duration INT NOT NULL,
  rating_id INT REFERENCES mpa_rating (rating_id) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS film_directors (
  film_id BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
  director_id INT REFERENCES directors (director_id) ON DELETE RESTRICT,
  PRIMARY KEY (film_id, director_id)
);

CREATE TABLE IF NOT EXISTS film_genres (
  film_id BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
  genre_id INT REFERENCES genres (genre_id) ON DELETE RESTRICT,
  PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users (
  user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email VARCHAR(255) NOT NULL,
  login VARCHAR(255) NOT NULL,
  name VARCHAR(255) NOT NULL,
  birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS friendship (
  user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
  friend_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
  PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS likes (
  user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
  film_id BIGINT REFERENCES films (film_id) ON DELETE CASCADE,
  PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS reviews (
  review_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  content TEXT NOT NULL,
  is_positive BOOLEAN NOT NULL,
  user_id BIGINT NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
  film_id BIGINT NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
  useful INT DEFAULT 0
);

CREATE TABLE IF NOT EXISTS review_reactions (
  review_id BIGINT REFERENCES reviews (review_id) ON DELETE CASCADE,
  user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
  is_like BOOLEAN NOT NULL,
  PRIMARY KEY (review_id, user_id)
);

CREATE TABLE IF NOT EXISTS event_types (
  event_type_id INT PRIMARY KEY,
  event_name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS operations_types (
  operation_type_id INT PRIMARY KEY,
  operation_name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS feeds (
  event_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id BIGINT NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
  entity_id BIGINT NOT NULL,
  event_type_id INT NOT NULL REFERENCES event_types (event_type_id) ON DELETE CASCADE,
  operation_type_id INT NOT NULL REFERENCES operations_types (operation_type_id) ON DELETE CASCADE,
  timestamp BIGINT NOT NULL
);

CREATE INDEX IF NOT EXISTS friendship_reverse ON friendship (friend_id, user_id);
CREATE INDEX IF NOT EXISTS likes_reverse ON likes (film_id, user_id);
CREATE INDEX IF NOT EXISTS reviews_film_user ON reviews (film_id, user_id);
CREATE INDEX IF NOT EXISTS review_reactions_review ON review_reactions (review_id);
